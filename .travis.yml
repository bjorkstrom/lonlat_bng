language: rust
cache: cargo
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
env:
  global:
    # This will be part of the release tarball
    # TODO change the project name
    - PROJECT_NAME=lonlat_bng
    # TODO comment out this variable if you don't want to build .deb packages on all the targets.
    # - MAKE_DEB=yes
    # TODO update these two variables. They are part of the .deb package metadata
    - DEB_MAINTAINER="Stephan HÃ¼gel <urschrei@gmail.com>"
    - DEB_DESCRIPTION=""
    - TRAVIS_CARGO_NIGHTLY_FEATURE=""
    - secure: bW+621HpryUdRObWedUlzgwrQ+lRrqN2S4MiMNJX9oa2I1/B4AM26QQDn604q9Hb+lRSO3S8SPqzvj7RqyCL+dmhR+vwf5Evyk+StR3aDAIAvXk1pl6w37ZoEJu4LPEUMpFjyTsOZ9CWj7KY1dqLo5fXV0iMd71m3yrNMLLaRRH6p9lV3tpIHu3IET5KrGcP4w1UNJtur116RAjtxS/lrraUUanTVepUidmnYdQGtpY1f1/1WDh4+J/oRyUws08FplUqsB1EFX0/zkVJbhShV1G85WUeZSFqZc7ij9H//3DJy05fzPhWbxUe4SXAMuaNaR1bOPiSUe+5HJbIgsg4vocBixRKkwj/I6hSzn35ODo/OyviWcb6u+DCJfq7ihhliH5JnKoX3Zn0RmTd4DL0jQNwsm136htpb7j1GeJ5GPT89lVZEss2pXBQhJWw4RU0goLbsgef3iw+RQ8r38TALh+MUGm8CjOjo8ESGQFkTIF3+9yJxF9XWuVx1sliI6dVgfbygFsRJWj2sas+TJJAT6gFqKYkGTZT6xkSds5JVfFVLIUDoSyJoJYwjpHnoBbPQfcQr8tRaw3XlhZpiSBnA/qCmjhTJ3W4VQEbhJtP4Ikf6GZmjMKuajW47pQHCf+egqgaYXiOAWZZ+iXzSB4R9OHi2inz1Lvw8YaIUe6p0o0=


# AFAICT There are a few ways to set up the build jobs. This one is not the DRYest but I feel is the
# easiest to reason about.
# TODO Feel free to remove the channels/targets you don't need
# NOTE Make *sure* you don't remove a reference (&foo) if you are going to dereference it (*foo)
matrix:
  include:
    # Stable channel
    - os: osx
      rust: stable
      env: TARGET=i686-apple-darwin
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          packages: &i686_unknown_linux_gnu
            # Cross compiler and cross compiled C libraries
            - gcc-multilib
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    # Beta channel
    - os: osx
      rust: beta
      env: TARGET=i686-apple-darwin
    - os: linux
      rust: beta
      env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          packages: *i686_unknown_linux_gnu
    - os: osx
      rust: beta
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu
    # Nightly channel
    - os: osx
      rust: nightly
      env: TARGET=i686-apple-darwin
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          packages: *i686_unknown_linux_gnu
    - os: osx
      rust: nightly
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
  allow_failures:
    # Target `i686-unknown-linux-musl` is currently only available on the nightly channel
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: beta
      env: TARGET=i686-unknown-linux-musl

before_script: |
  PKGNAME="${TRAVIS_REPO_SLUG}" # must match with cargo.toml
  LOCAL="~/.local" # install here to avoid `sudo`
  pip install travis-cargo --user &&
  export PATH=$HOME/.local/bin:$PATH

before_install:
  - export PATH="$PATH:$HOME/.cargo/bin"

install:
  - bash ci/install.sh

script:
  - bash ci/script.sh

after_success:
  - travis-cargo --only stable doc
  - travis-cargo --only stable doc-upload
  - travis-cargo coveralls --no-sudo --verify

before_deploy:
  - bash ci/before_deploy.sh

deploy:
  provider: releases
  # TODO Regenerate this api_key for your project, this one won't work for you. Here's how:
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Call `travis encrypt $github_token` where $github_token is the token you got in the previous
  # step and `travis` is the official Travis CI gem (see https://rubygems.org/gems/travis/)
  # - Enter the "encrypted value" below
  api_key:
        - secure: bW+621HpryUdRObWedUlzgwrQ+lRrqN2S4MiMNJX9oa2I1/B4AM26QQDn604q9Hb+lRSO3S8SPqzvj7RqyCL+dmhR+vwf5Evyk+StR3aDAIAvXk1pl6w37ZoEJu4LPEUMpFjyTsOZ9CWj7KY1dqLo5fXV0iMd71m3yrNMLLaRRH6p9lV3tpIHu3IET5KrGcP4w1UNJtur116RAjtxS/lrraUUanTVepUidmnYdQGtpY1f1/1WDh4+J/oRyUws08FplUqsB1EFX0/zkVJbhShV1G85WUeZSFqZc7ij9H//3DJy05fzPhWbxUe4SXAMuaNaR1bOPiSUe+5HJbIgsg4vocBixRKkwj/I6hSzn35ODo/OyviWcb6u+DCJfq7ihhliH5JnKoX3Zn0RmTd4DL0jQNwsm136htpb7j1GeJ5GPT89lVZEss2pXBQhJWw4RU0goLbsgef3iw+RQ8r38TALh+MUGm8CjOjo8ESGQFkTIF3+9yJxF9XWuVx1sliI6dVgfbygFsRJWj2sas+TJJAT6gFqKYkGTZT6xkSds5JVfFVLIUDoSyJoJYwjpHnoBbPQfcQr8tRaw3XlhZpiSBnA/qCmjhTJ3W4VQEbhJtP4Ikf6GZmjMKuajW47pQHCf+egqgaYXiOAWZZ+iXzSB4R9OHi2inz1Lvw8YaIUe6p0o0=
  file_glob: true
  file: ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.*
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  # deploy when a new tag is pushed
  on:
    # channel to use to produce the release artifacts
    # NOTE make sure you only release *once* per target
    # TODO you may want to pick a different channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true

branches:
  only:
    # Pushes and PR to the master branch
    - master
    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger deploys when a new tag
    # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/


notifications:
  email:
    on_success: never
